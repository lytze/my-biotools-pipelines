#!/bin/bash
set -e

## HELP MSG
if [ $# -eq 0 ] || [ $1 = "-h" ] || [ $1 = "--help" ] ; then
    echo -e \
"Arguments < formmat: -flag [type] Intro (defalt value) >
    -p [INT]        Thread number (aligner) (4)
    -t [fq|gz]      Input file type (gz)
    -i [PATH/DIR]   PATH to input data directory (./data)
    -I [FILE]       PATH to input information list (./input-info)
    -q              Do variant quality control (FALSE)
    -h|--help       This friendly help information"
    exit 0
fi

## DEFAULT OPTs
TR=4                 # p = THREAD NUMBER
FT="gz"              # t = FILE TYPE
DA="data"            # i = PATH/DATA
IN="input-info"      # I = INPUT INFO
QC=FALSE             # q = QUALITY CONTROL

## GET OPTs
while getopts 'p:t:i:I:q' OPT
do
    case $OPT in
        p)  TR=$OPTARG ;;
        t)  FT=$OPTARG ;;
        i)  DA=$OPTARG ;;
        I)  IN=$OPTARG ;;
        q)  QC=TRUE ;;
    esac
done

## CHECK EXISTENCE of REQUIRED FILES
DA=`readlink -m $DA`
if [[ ! -e $DA ]] ; then
    echo "[ ERROR ] Input data directory <$DA> NOT FOUND"
    exit 1
elif [[ ! -d $DA ]] ; then
    echo "[ ERROR ] Input data directory <$DA> IS NOT A DIRECTORY"
    exit 1
fi
IN=`readlink -m $IN`
if [[ ! -e $IN ]] ; then
    echo "[ ERROR ] Input info list <$IN> NOT FOUND"
    exit 1
elif [[ ! -f $IN ]] ; then
    echo "[ ERROR ] Input info list LIST <$IN> IS NOT AN ORDINARY FILE"
    exit 1
fi

## SUBMIT JOBS TO LSF
for FO in `cut -f1 input-info | sort | uniq` ; do
    bsub -J $FO \
        -o $FO.run.log -e $FO.msg.log \
        -q normal -n $TR -R "span[ptile=$TR]" \
        "clust-unit-gatkShortVariants $TR $FT $DA $IN $FO $QC"
    sleep 0.5
done